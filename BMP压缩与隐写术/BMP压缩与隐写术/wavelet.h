#include <stdio.h>
#ifndef CLASS_WAVELET
#define CLASS_WAVELET
const double  H[8][8] = {
	{ 0.353553391, 0.353553391, 0.353553391, 0.353553391, 0.353553391, 0.353553391, 0.353553391, 0.353553391 },
	{ 0.353553391, 0.353553391, 0.353553391, 0.353553391, -0.353553391, -0.353553391, -0.353553391, -0.353553391 },
	{ 0.5, 0.5, -0.5, -0.5, 0.0, 0.0, 0.0, 0.0 },
	{ 0.0, 0.0, 0.0, 0.0, 0.5, 0.5, -0.5, -0.5 },
	{ 0.707106781, -0.707106781, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
	{ 0.0, 0.0, 0.707106781, -0.707106781, 0.0, 0.0, 0.0, 0.0 },
	{ 0.0, 0.0, 0.0, 0.0, 0.707106781, -0.707106781, 0.0, 0.0 },
	{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.707106781, -0.707106781 }
};//变换矩阵

const double H_t[8][8] = {
	{ 0.353553391, 0.353553391, 0.5, 0.0, 0.707106781, 0.0, 0.0, 0.0 },
	{ 0.353553391, 0.353553391, 0.5, 0.0, -0.707106781, 0.0, 0.0, 0.0 },
	{ 0.353553391, 0.353553391, -0.5, 0.0, 0.0, 0.707106781, 0.0, 0.0 },
	{ 0.353553391, 0.353553391, -0.5, 0.0, 0.0, -0.707106781, 0.0, 0.0 },
	{ 0.353553391, -0.353553391, 0.0, 0.5, 0.0, 0.0, 0.707106781, 0.0 },
	{ 0.353553391, -0.353553391, 0.0, 0.5, 0.0, 0.0, -0.707106781, 0.0 },
	{ 0.353553391, -0.353553391, 0.0, -0.5, 0.0, 0.0, 0.0, 0.707106781 },
	{ 0.353553391, -0.353553391, 0.0, -0.5, 0.0, 0.0, 0.0, -0.707106781 }
};//H的转置

const double H2[4][4] = {
	{ 0.5, 0.5, 0.5, 0.5 },
	{ 0.5, 0.5, -0.5, -0.5 },
	{ 0.707106781, -0.707106781, 0.0, 0.0 },
	{ 0.0, 0.0, 0.707106781, -0.707106781 }
};

const double H_t2[4][4] = {
	{ 0.5, 0.5, 0.707106781, 0.0 },
	{ 0.5, 0.5, -0.707106781, 0.0 },
	{ 0.5, -0.5, 0.0, 0.707106781 },
	{ 0.5, -0.5, 0.0, -0.707106781 }
};

const double H3[2][2] = {
	{ 0.707106781, 0.707106781 },
	{ 0.707106781, -0.707106781 }
};

const double H_t3[2][2] = {
	{ 0.707106781, 0.707106781 },
	{ 0.707106781, -0.707106781 }
};
//int R[8][8] = { { 0 } };
//unsigned char I[8][8] = { { 0 } };





class Wavelet{
public:
	Wavelet();
	void Haar_transformation(unsigned char m_t[8][8]);
	void inverse_Harr_transformation(int r[8][8]);

	//typedef double[8][8] Matrix_Unit;
	
	//结果存放
	unsigned char I[8][8] ;
	int R[8][8];
};

#endif